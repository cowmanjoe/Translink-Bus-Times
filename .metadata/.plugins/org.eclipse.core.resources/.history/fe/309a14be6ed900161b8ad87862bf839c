package translink;


import java.time.LocalTime;
import java.util.List;

import javafx.application.Application;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.layout.VBox;
import javafx.stage.Stage; 
import javafx.event.ActionEvent; 

public class Graphics extends Application {
	
	private TableView table = new TableView(); 
	private ObservableList<Arrival> data = 
			FXCollections.observableArrayList(
					new Arrival(LocalTime.now(), 12345, 4), 
					new Arrival(LocalTime.of(2, 20), 15555, 84));
	
	TextField stopField = new TextField(); 
	TextField routeField = new TextField(); 
	
	public static void main(String[] args) {
		launch(args); 
	}
	
	
	@Override
	public void start(Stage stage) throws Exception {
		Scene scene = new Scene (new Group()); 
		stage.setWidth(400); 
		stage.setHeight(800); 
		
		final Label label = new Label("Bus Times"); 
		final Label stopLabel = new Label("Stop #"); 
		final Label routeLabel = new Label("Route #");
		
		
		
		Button refreshButton = new Button("Refresh");
		refreshButton.setOnAction(new EventHandler<ActionEvent>() { 
			@Override
			public void handle(ActionEvent event) { 
				updateData(); 
			}
		});
		table.setEditable(true);
		
		TableColumn stopNumberCol = new TableColumn("Stop Number"); 
		stopNumberCol.setMinWidth(100); 
		stopNumberCol.setCellValueFactory(new PropertyValueFactory<Arrival, Integer>("stopNumber"));
		
		TableColumn routeNumberCol = new TableColumn("Route Number"); 
		routeNumberCol.setMinWidth(100);; 
		routeNumberCol.setCellValueFactory(new PropertyValueFactory<Arrival, Integer>("routeNumber"));
		
		TableColumn timeCol = new TableColumn("Expected Time"); 
		timeCol.setMinWidth(100);
		timeCol.setCellValueFactory(new PropertyValueFactory<Arrival, String>("time"));
		
		table.setItems(data);
		table.getColumns().addAll(stopNumberCol, routeNumberCol, timeCol); 
		
		final VBox vbox = new VBox() ; 
		vbox.setSpacing(5);
		vbox.setPadding(new Insets(10, 0, 0, 10));
		vbox.getChildren().addAll(label, table, stopLabel, stopField, routeLabel, routeField, refreshButton); 
		
		((Group) scene.getRoot()).getChildren().addAll(vbox); 
		
		stage.setScene(scene);
		stage.show(); 
	}
	
	private void updateData() { 
		int stop = Integer.parseInt(stopField.getCharacters().toString().trim());
		List<Arrival> as; 
		if (routeField.getCharacters().toString().trim() == "") {
			as = DataFetcher.getArrivals(stop);
			
		} else {
			int route = Integer.parseInt(routeField.getCharacters().toString().trim()); 
			as = DataFetcher.getArrivals(stop, route); 
		}
		data = FXCollections.observableArrayList(as); 
		table.setItems(data); 
	}
	
}
